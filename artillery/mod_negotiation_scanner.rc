<ruby>
=begin
  Name:  mod_negotiation_scanner.rc
    This script is intended to be used with the Metasploit Framework as a part of the battery suite of resource scripts
    For more information see:
      Battery Resource Scripts: https://github.com/kn0/battery
      Metasploit Framework:  https://github.com/rapid7/metasploit-framework

  Author: Matt Young
    twitter: @sil3ntcor3

=end
# Print Header
print_status "Using auxiliary/scanner/http/mod_negotiation_scanner"
  
# Get a list of target services
targets = []
https_targets = []
begin
  framework.db.services.each do |service|
    if ( service.info =~ /Apache/i and (service.name =~  /https/i or service.name =~ /https\/ssl/i) and service.state.eql? 'open' and service.proto.eql? 'tcp')
      https_targets << {'https_ip' => service.host.address, 'https_port' => service.port}
    end
    
    if ( service.info =~ /Apache/i and service.port != 443 and service.state.eql? 'open' and service.proto.eql? 'tcp')
      targets << {'ip' => service.host.address, 'port' => service.port}
    end
  end

  # Remove any duplicate entries
  targets.uniq!
  https_targets.uniq!

rescue ActiveRecord::ConnectionNotEstablished
  puts "DB not connected..."
  return
end

#if https_targets.empty? || targets.empty?
#  print_warning "No targets found"
#else
  # Get a lits of unique target ports
  target_ports = (targets.map {|t| t['port'] }).uniq
  https_target_ports = (https_targets.map {|t| t['https_port'] }).uniq

  # Setup the module
  self.run_single("use auxiliary/scanner/http/mod_negotiation_scanner")
  self.run_single("set ShowProgress false")
  self.run_single("set VERBOSE true")
  self.run_single("set HttpClientTimeout 5")
  self.run_single("set THREADS 2")
  
  # Run the module once for each discovered target port (with the associated hosts)
  target_ports.each do |target_port|
    self.run_single("set RPORT #{target_port}")
    target_rhosts = ((targets.select {|t| t['port'].eql? target_port}).map {|t| t['ip'] }).join (" ")
    self.run_single("set RHOSTS #{target_rhosts}")
    self.run_single("set SSL false")
    self.run_single("run")
  end

  https_target_ports.each do |https_target_port|
    self.run_single("set RPORT #{https_target_port}")
    https_target_rhosts = ((https_targets.select {|t| t['https_port'].eql? https_target_port}).map {|t| t['https_ip'] }).join (" ")
    self.run_single("set RHOSTS #{https_target_rhosts}")
    self.run_single("set SSL true")
    self.run_single("run")
  end
#end
</ruby>
